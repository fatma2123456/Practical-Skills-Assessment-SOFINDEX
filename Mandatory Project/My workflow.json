{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "a2e478ac-5afa-4161-a24e-c50742836d22",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "getAll",
        "subreddit": "forhire",
        "limit": 10,
        "filters": {}
      },
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        208,
        0
      ],
      "id": "7c2f3674-17bf-4d33-9b67-0963e4ecec7f",
      "name": "Get many posts",
      "credentials": {
        "redditOAuth2Api": {
          "id": "iTxvsBKuD58OtqQi",
          "name": "Reddit account 2"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an expert Lead Qualification Assistant. Your task is to analyze a post from a public platform and determine if it is a \"warm lead\" from someone genuinely looking to hire or buy a tech service (like web development, app development, UI/UX design, automation).\n\nAVOID classifying posts where someone is offering their own services, asking for school help, or just having a general discussion.\n\nYour response MUST be in a clean JSON format. Do not add any text before or after the JSON object. The JSON should have these exact keys:\n\"is_lead\": boolean (true if it's a warm lead, otherwise false)\n\"confidence_score\": number (a score from 0 to 10 on how certain you are, where 10 is 100% certain)\n\"summary\": string (a one-sentence summary of what the person is looking for, or \"N/A\" if it's not a lead)\n\n---\nANALYZE THIS POST:\n{{ $json.title }}\n{{ $json.selftext }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        448,
        0
      ],
      "id": "d87475b2-455a-4cb1-95b6-dffd3dd601a2",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "lD9yBOjgPSMOXvEt",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Get the AI's response text from the current item\nconst rawText = $input.item.json.content.parts[0].text;\n\n// Find the JSON part within the text\nconst match = rawText.match(/{[\\s\\S]*}/);\n\n// Get the paired item data from the original Reddit node\n// This is a simpler and more robust way to get the data\nconst redditData = $('Get many posts').item.json;\n\n// Start building our final result using the original Reddit data\nconst finalResult = { ...redditData };\n\nif (match && match[0]) {\n  try {\n    // If we found a valid JSON in the AI response, parse it\n    const aiData = JSON.parse(match[0]);\n    // And merge it into our final result\n    Object.assign(finalResult, aiData);\n  } catch (e) {\n    // If parsing fails for any reason, just mark it as not a lead\n    finalResult.is_lead = false;\n  }\n} else {\n  // If the AI response had no JSON, mark it as not a lead\n  finalResult.is_lead = false;\n}\n\n// Always return the complete, combined object\nreturn finalResult;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        0
      ],
      "id": "a75f2beb-a1e9-4c39-9560-5f675ba02e49",
      "name": "Code in JavaScript",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b0892949-fa47-4be0-83f4-f89c0f9036a1",
              "leftValue": "={{$json[\"is_lead\"]}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1008,
        0
      ],
      "id": "9c908326-637d-4eb3-ab61-94b590a72908",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1q6b-FcbqN4WLnGRs5NxB8NhT98Gv-Q0wTu-P205K0jE",
          "mode": "list",
          "cachedResultName": "Google Sheets ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1q6b-FcbqN4WLnGRs5NxB8NhT98Gv-Q0wTu-P205K0jE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1308806248,
          "mode": "list",
          "cachedResultName": "الورقة2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1q6b-FcbqN4WLnGRs5NxB8NhT98Gv-Q0wTu-P205K0jE/edit#gid=1308806248"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{ $now }}",
            "Lead Title": "={{ $json.title }}",
            "Source": "=Reddit r/forhire",
            "URL": "={{ $json.url }}",
            "AI Summary": "={{ $json.summary }}",
            "Confidence Score": "={{ $json.confidence_score }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Lead Title",
              "displayName": "Lead Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AI Summary",
              "displayName": "AI Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Confidence Score",
              "displayName": "Confidence Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1200,
        96
      ],
      "id": "17396a2f-50ee-459b-ad4d-db13747e84f0",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Z23UTHUK9jyELPy7",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get many posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many posts": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false
  },
  "versionId": "40082c1b-0470-4d0b-870f-36c69212be7c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5ad667ecaf2bf2d1232da6ec9990af23857ae317ffdcc5a8570aa5a08c5bff2a"
  },
  "id": "exbYpPhfM55bnx1b",
  "tags": []
}